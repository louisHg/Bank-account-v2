databaseChangeLog:
  - changeSet:
      id: 02_create_search_multicritere_user
      context: nominal
      comment: Ajout d'un champ recherche
      author: lhuyghe
      dbms: "!h2"
      changes:
        - modifyDataType:
            tableName: users
            columnName: user_recherche
            newDataType: varchar(10000)
        - sql:
            sql : CREATE OR REPLACE FUNCTION public.unaccent(character varying)
              RETURNS character varying
              LANGUAGE plpgsql
              AS '
              DECLARE
              p_str    alias for $1;
              v_str    varchar;
              BEGIN
              select translate(p_str, ''ÀÁÂÃÄÅ'', ''AAAAAA'') into v_str;
              select translate(v_str, ''ÉÈËÊ'', ''EEEE'') into v_str;
              select translate(v_str, ''ÌÍÎÏ'', ''IIII'') into v_str;
              select translate(v_str, ''ÌÍÎÏ'', ''IIII'') into v_str;
              select translate(v_str, ''ÒÓÔÕÖ'', ''OOOOO'') into v_str;
              select translate(v_str, ''ÙÚÛÜ'', ''UUUU'') into v_str;
              select translate(v_str, ''àáâãäå'', ''aaaaaa'') into v_str;
              select translate(v_str, ''èéêë'', ''eeee'') into v_str;
              select translate(v_str, ''ìíîï'', ''iiii'') into v_str;
              select translate(v_str, ''òóôõö'', ''ooooo'') into v_str;
              select translate(v_str, ''ùúûü'', ''uuuu'') into v_str;
              select translate(v_str, ''Çç'', ''Cc'') into v_str;
              return v_str;
              END;';
        # Declaration of triggers and functions
        # Concatenation function in the search field when adding information
        - sql:
            sql: CREATE OR REPLACE FUNCTION public.update_user_recherche_trigger()
              RETURNS TRIGGER
              LANGUAGE plpgsql
              AS '
              BEGIN
              NEW.user_recherche =
              coalesce(lower(unaccent(trim(NEW.user_account_balance::text))),'''') ||''|''||
              coalesce(lower(unaccent(trim(NEW.user_address::text))),'''') ||''|''||
              coalesce(lower(unaccent(trim(NEW.user_date_of_birth::text))),'''') ||''|''||
              coalesce(lower(unaccent(trim(NEW.user_email::text))),'''') ||''|''||
              coalesce(lower(unaccent(trim(NEW.user_first_name::text))),'''') ||''|''||
              coalesce(lower(unaccent(trim(NEW.user_job_title::text))),'''') ||''|''||
              coalesce(lower(unaccent(trim(NEW.user_name::text))),'''') ||''|''||
              coalesce(lower(unaccent(trim(NEW.user_phone_number::text))),'''');
              RETURN NEW;
              END;';

        # Trigger activating the function to fill the search field with each user insert
        - sql:
            sql: CREATE TRIGGER update_users_recherche_trigger_before_insert
              BEFORE INSERT
              ON public.users
              FOR EACH ROW EXECUTE PROCEDURE update_user_recherche_trigger()

        # Trigger activating the function to fill the search field with each user update
        - sql:
            sql: CREATE TRIGGER update_users_recherche_trigger_before_update
              BEFORE UPDATE
              ON public.users
              FOR EACH ROW EXECUTE PROCEDURE update_user_recherche_trigger()